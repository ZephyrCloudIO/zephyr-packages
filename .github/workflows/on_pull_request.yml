name: On Pull Request
on:
  pull_request:
  workflow_dispatch:
    inputs:
      branch:
        description: on the master branch
        required: true
        default: 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  NODE_VERSION: 20

jobs:
  deps:
    name: Install Dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Win32 Long Paths
        if: runner.os == 'Windows'
        run: |
          reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f
        shell: powershell
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile

  build:
    name: Build it all
    runs-on: ubuntu-latest
    needs: deps
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - name: run build-all
        # TODO: reintroduce whole repo build when examples are ready
        run: pnpm build-all --exclude="examples/**" && exit 0

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - name: run lint
        run: pnpm dlx nx affected -t lint

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: deps
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable Win32 Long Paths
        if: runner.os == 'Windows'
        run: |
          reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f
        shell: powershell
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - name: run test
        env:
          ZE_IS_PREVIEW: true
          ZE_API: ${{ secrets.ZEPHYR_API_URL }}
          ZE_API_GATEWAY: ${{ secrets.ZE_API_GATEWAY }}
          ZE_SECRET_TOKEN: ${{ secrets.ZE_SECRET_TOKEN }}
        run: pnpm dlx nx affected -t test

  test-sidepanel:
    name: Side Panel Integration Test
    runs-on: ubuntu-latest
    needs: deps
    env:
      SIDE_PANEL_BUILD_PATH: dist/zephyr-side-panel
      SIDE_PANEL_ZIP_FILE: zephyr-side-panel.zip
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
      - name: Get current Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm list "@playwright/test" | sed -n "/^@playwright/p" | sed "s/@playwright\/test //g")" >> $GITHUB_ENV
      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: pnpm dlx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: pnpm dlx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Copy template .env file
        run: cp e2e/zephyr-side-panel/.env.template e2e/zephyr-side-panel/.env
      - name: Build Zephyr side panel
        run: pnpm dlx nx run zephyr-side-panel:build:test
      - name: Test Side Panel
        run: pnpm dlx nx e2e e2e-zephyr-side-panel
